# -*- coding: utf-8 -*-
"""2023.2s.22 DEMO Examen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MM727C2vymt-jETTvcdMU2e06BkQ-5L_

# **DEMO Examen**

Poner lista de participantes de equipo aquí (tabla markdown):

La fórmula para calcular grados centígrados a partir de grados Farenheit es la siguiente:

```
C=(F-32)/1.8
```

La temperatura del cuerpo tiene las siguientes temperaturas:

|Rango|Nombre de estado|
|---|---|
|[*,35)|Hipotermia|
|[35,37)|Normal|
|[37,38)|Febrícula|
|[38,41)|Fiebre|
|[41,*)|Hiperpirexia|

En un hospital se hizo lectura de todos los pacientes de un piso. Desafortunadamente, solo se tenía un termónmetro que mide grados Farenheit.

Se desea un programa que capture múltiples temperaturas, y que cuando se deje de capturar, muestre una lista de todas las lecturas tomadas.

Se pide elaborar un programa en Python que contenga:

1.  Una función llamada **capturar_f**, que pregunte un dato y que valide lo sigiente:
    1. Que el dato no se omita.
    1. Que el dato se apegue al patrón de uno a tres dígitos, un punto, y de una a tres decimales (debe validarse con regular expressions).
    1. Que el valor convertido a floar esté entre 0.0 y 150.0
    1. La función recibe como argumento un parámetro llamado **prompt**, que deberá tener un valor por omisión de "Dame un número flotante:"
    1. La función retorna un valor flotante, que corrsponde a una conversión a float de lo capturado.
    1. La función pregunta el dato hasta que sea correcto.
    1. La función muestra mensajes de error de 3 niveles (Error, detalle, llamada a la acción).

1. El programa debe definir una clase llamada **lectura**, que contenga lo siguiente:
    1. **grados_f**: Es un atributo expuesto, de tipo float, que corresponde a la temperatura del paciente.
    1. **grados_c**: Es una propiedad expuesta, que calcula el equivalente a centígrados de **grados_f**.
    1. **estado**: Es una propiedad expuesta, que determina el estado de temperatura de la persona, de acuerdo a la tabla de estados.
    1. **mostrar_lectura**: Es un método que muestra en consola el siguiente mensaje:

```
Farenheit: {grados_f}
Centigrados: {grados_c}
Estado: {estado}
```

La clase debe tener un método constructor, que reciba la propiedad **grados_f**.

El programa principal debe hacer lo siguiente.

1. Declarar una lista llamada **lecturas**, que almacenará todos los objetos de tipo **lectura** que se generen.
1. Deberá iniciar un ciclo infinito.
    1. Deberá preguntar la lectura usando la función **capturar_f**, especificando como prompt el texto "Dame la temperatura del paciente:"
    1. Recibido el dato, se debe agregar a la lista de objetos (**lecturas**) una instancia de **lectura**, donde se utilice el dato capturado.
    1. El programa debe preguntar si desea capturar una lectura más. Si es así, ``continue``, de lo contrario, ``break``.

Fuera del ciclo, se debe leer de forma secuencial la lista de objetos, y ejecutar el método **mostrar_lectura**, para ver lo capturado.
"""

# Codificar el programa aquí. Capturar al menos 20
# temperaturas Farenheit, para comprobar el funcionamiento.